version: "3.8"
services:
  neo:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo/data:/data
      - ./neo/log:/log
      - ./neo/import:/var/lib/neo4j/import
      - ./neo/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/b1otope
    networks:
      - web
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.http.routers.neo.rule=Host(`neo.queel.fr`)"
      - "traefik.tcp.services.neo.loadbalancer.server.port=7474"
      - "traefik.http.routers.neo.entrypoints=websecure"
  node:
    build: ./docker/node_api
    volumes:
      - ./node:/src
    tty: true
    networks:
      - web
    ports:
      - ":8000"
      - ":8080"
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.http.routers.node.rule=Host(`api.queel.fr`)"
      - "traefik.http.routers.node.entrypoints=websecure"
      - "traefik.tcp.services.node.loadbalancer.server.port=8000"
      - "traefik.http.routers.ws.rule=Host(`ws.queel.fr`)"
      - "traefik.tcp.services.ws.loadbalancer.server.port=8080"
      - "traefik.http.routers.ws.protocol=ws"
      - "traefik.http.routers.ws.entrypoints=websecure"
    depends_on:
      - elastic
      - neo
    working_dir: /src
  node_cdn:
    build: ./docker/node
    volumes:
      - ./cdn:/src
      - /../upload:/upload
    tty: true
    working_dir: /src
    networks:
      - web
    ports:
      - ":4000"
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.http.routers.cdn.rule=Host(`cdn.queel.fr`)"
      - "traefik.http.routers.cdn.entrypoints=websecure"

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
      - xpack.ml.enabled=false
    volumes:
      - ./elastic:/usr/share/elasticsearch/data
    networks:
      - web
  nginx:
    image: nginx
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./build:/src
    tty: true
    working_dir: /src
    networks:
      - web
    ports:
      - ":80"
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`queel.fr`)"
      - "traefik.http.routers.front.entrypoints=websecure"

  nginx_admin:
    image: nginx
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./admin:/src
    tty: true
    working_dir: /src
    networks:
      - web
    ports:
      - ":80"
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`admin.queel.fr`)"
      - "traefik.http.routers.admin.entrypoints=websecure"


  mercure:
    image: dunglas/mercure
    tty: true
    networks:
      - web
    volumes:
      - ./mercure:/src
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.http.routers.mercure.rule=Host(`mercure.queel.fr`)"
      - "traefik.http.routers.mercure.entrypoints=websecure"

    command: /usr/bin/caddy run -config /src/Caddyfile


networks:
  web:
    external: true


